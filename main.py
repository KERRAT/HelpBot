import telebot
import json
import config
from telebot import types

bot = telebot.TeleBot(config.TOKEN)

r1 = "–î–æ–º–∞—à–Ω—î –Ω–∞—Å–∏–ª–ª—è"
r2 = "–ö–æ—Ä—É–ø—Ü—ñ—è"
r3 = "–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏"
r4 = "–ü—Ä–æ–±–ª–µ–º–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ"
r5 = "–ü—Ä–æ–±–ª–µ–º–∏ –∑—ñ –∑–¥–æ—Ä–æ–≤'—è–º"
r6 = "–ë—É–ª—ñ–Ω–≥"
r7 = "–ù–∞—Å–∏–ª–ª—è"
r8 = "–•–∞—Ä–∞—Å–º–µ–Ω—Ç"
@bot.message_handler(commands=['start'])
def start(message):
    """
        –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    """
    if message.chat.type == "private":
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
        keyboard.row(r1, r2)
        keyboard.row(r3, r4)
        keyboard.row(r5, r6)
        keyboard.row(r7, r8)
        keyboard.row("–ù–µ–º–∞—î –º–æ—î—ó –ø—Ä–æ–±–ª–µ–º–∏")
        bot.send_message(message.chat.id, '–í—ã–±–∏—Ä–∞–π', reply_markup=keyboard)

    """
        –°–æ–∑–¥–∞–Ω–∏–µ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –µ—ë –≤–æ–∑–≤—Ä–∞—Ç
    """
def inline_yes_no():
    inline_keyboard = types.InlineKeyboardMarkup(row_width=1)
    InlineButtonYes = types.InlineKeyboardButton(text="–ü–æ–º–æ–≥–ª–æ üòä", callback_data="Yes")
    InlineButtonNo = types.InlineKeyboardButton(text="–ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä—ñ—à–µ–Ω–∞ üò•", callback_data="No")
    inline_keyboard.row(InlineButtonYes, InlineButtonNo)
    return inline_keyboard

    """
        —Å–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    """
info = list()


@bot.message_handler(content_types=["text"])
def event_button(message):
    """
        –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ "–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏" –≤ –ø—Ä–æ–±–ª–µ–º–µ
    """
    if message.chat.type == "group":
        if(message.text == "+"):
            try:
                """
                    –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ —Å –∏–¥ –∏–≤–µ–Ω—Ç–æ–≤, –∑–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –Ω–µ–≥–æ
                """
                with open("problems.txt") as f:
                    text = f.read()
                    list_ids = json.loads(text)
                    """
                        –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ "–Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ". –ï—Å–ª–∏ –Ω–µ—Ç—É -- –¥–æ–±–∞–≤–∏—Ç—å
                    """
                if message.reply_to_message.message_id in list_ids:

                    text = message.reply_to_message.text
                    if not '''{}'''.format(message.from_user.first_name) in text:
                        text = message.reply_to_message.text+ '''
                    
{}'''.format(message.from_user.first_name)
                    """
                        –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–Ω–∏—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–±–ª–µ–º—ã
                    """
                    bot.edit_message_text(chat_id= message.chat.id,message_id=message.reply_to_message.message_id,text= text)
            except:pass




    if message.chat.type == "private":
        txt = message.text
        if txt == r1:
            bot.send_message(message.chat.id, '''–í–∏ –º–æ–∂–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —Ç–æ-—Ç–æ —ñ —Ç–æ-—Ç–æ''', reply_markup=inline_yes_no())

            @bot.callback_query_handler(
                lambda query: query.data == "Yes")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id, '''–ú–∏ —Ä–∞–¥—ñ, —â–æ –≤–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Ä—ñ—à–µ–Ω–∞ ü•∞''')

            @bot.callback_query_handler(lambda query: query.data == "No")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id,
                                 '''–í–∏ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –Ω–∞–π–Ω–∏–∂–Ω—å–æ—é –∫–Ω–æ–ø–∫–æ—é, —â–æ–± –æ–ø–∏—Å–∞—Ç–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –∞–±–æ –∂ –ø–æ–∑–≤–æ–Ω–∏—Ç–∏ 
    –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º:11111111111''')


        elif txt == r2:
            bot.send_message(message.chat.id, '''–í–∏ –º–æ–∂–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —Ç–æ-—Ç–æ —ñ —Ç–æ-—Ç–æ''', reply_markup=inline_yes_no())

            @bot.callback_query_handler(
                lambda query: query.data == "Yes")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id, '''–ú–∏ —Ä–∞–¥—ñ, —â–æ –≤–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Ä—ñ—à–µ–Ω–∞ ü•∞''')

            @bot.callback_query_handler(lambda query: query.data == "No")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id,
                                 '''–í–∏ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –Ω–∞–π–Ω–∏–∂–Ω—å–æ—é –∫–Ω–æ–ø–∫–æ—é, —â–æ–± –æ–ø–∏—Å–∞—Ç–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –∞–±–æ –∂ –ø–æ–∑–≤–æ–Ω–∏—Ç–∏ 
    –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º:2222222222''')
        elif txt == r3:
            bot.send_message(message.chat.id, '''–í–∏ –º–æ–∂–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —Ç–æ-—Ç–æ —ñ —Ç–æ-—Ç–æ''', reply_markup=inline_yes_no())

            @bot.callback_query_handler(
                lambda query: query.data == "Yes")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id, '''–ú–∏ —Ä–∞–¥—ñ, —â–æ –≤–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Ä—ñ—à–µ–Ω–∞ ü•∞''')

            @bot.callback_query_handler(lambda query: query.data == "No")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id,
                                 '''–í–∏ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –Ω–∞–π–Ω–∏–∂–Ω—å–æ—é –∫–Ω–æ–ø–∫–æ—é, —â–æ–± –æ–ø–∏—Å–∞—Ç–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –∞–±–æ –∂ –ø–æ–∑–≤–æ–Ω–∏—Ç–∏ 
    –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º:333333333''')
        elif txt == r4:
            bot.send_message(message.chat.id, '''–í–∏ –º–æ–∂–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —Ç–æ-—Ç–æ —ñ —Ç–æ-—Ç–æ''', reply_markup=inline_yes_no())

            @bot.callback_query_handler(
                lambda query: query.data == "Yes")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id, '''–ú–∏ —Ä–∞–¥—ñ, —â–æ –≤–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Ä—ñ—à–µ–Ω–∞ ü•∞''')

            @bot.callback_query_handler(lambda query: query.data == "No")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id,
                                 '''–í–∏ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –Ω–∞–π–Ω–∏–∂–Ω—å–æ—é –∫–Ω–æ–ø–∫–æ—é, —â–æ–± –æ–ø–∏—Å–∞—Ç–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –∞–±–æ –∂ –ø–æ–∑–≤–æ–Ω–∏—Ç–∏ 
    –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º:444444444444''')
        elif txt == r5:
            bot.send_message(message.chat.id, '''–í–∏ –º–æ–∂–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —Ç–æ-—Ç–æ —ñ —Ç–æ-—Ç–æ''', reply_markup=inline_yes_no())

            @bot.callback_query_handler(
                lambda query: query.data == "Yes")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id, '''–ú–∏ —Ä–∞–¥—ñ, —â–æ –≤–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Ä—ñ—à–µ–Ω–∞ ü•∞''')

            @bot.callback_query_handler(lambda query: query.data == "No")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id,
                                 '''–í–∏ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –Ω–∞–π–Ω–∏–∂–Ω—å–æ—é –∫–Ω–æ–ø–∫–æ—é, —â–æ–± –æ–ø–∏—Å–∞—Ç–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –∞–±–æ –∂ –ø–æ–∑–≤–æ–Ω–∏—Ç–∏ 
    –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º:55555555555''')
        elif txt == r6:
            bot.send_message(message.chat.id, '''–í–∏ –º–æ–∂–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —Ç–æ-—Ç–æ —ñ —Ç–æ-—Ç–æ''', reply_markup=inline_yes_no())

            @bot.callback_query_handler(
                lambda query: query.data == "Yes")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id, '''–ú–∏ —Ä–∞–¥—ñ, —â–æ –≤–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Ä—ñ—à–µ–Ω–∞ ü•∞''')

            @bot.callback_query_handler(lambda query: query.data == "No")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id,
                                 '''–í–∏ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –Ω–∞–π–Ω–∏–∂–Ω—å–æ—é –∫–Ω–æ–ø–∫–æ—é, —â–æ–± –æ–ø–∏—Å–∞—Ç–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –∞–±–æ –∂ –ø–æ–∑–≤–æ–Ω–∏—Ç–∏ 
    –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º:66666666666''')
        elif txt == r7:
            bot.send_message(message.chat.id, '''–í–∏ –º–æ–∂–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —Ç–æ-—Ç–æ —ñ —Ç–æ-—Ç–æ''', reply_markup=inline_yes_no())

            @bot.callback_query_handler(
                lambda query: query.data == "Yes")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id, '''–ú–∏ —Ä–∞–¥—ñ, —â–æ –≤–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Ä—ñ—à–µ–Ω–∞ ü•∞''')

            @bot.callback_query_handler(lambda query: query.data == "No")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id,
                                 '''–í–∏ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –Ω–∞–π–Ω–∏–∂–Ω—å–æ—é –∫–Ω–æ–ø–∫–æ—é, —â–æ–± –æ–ø–∏—Å–∞—Ç–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –∞–±–æ –∂ –ø–æ–∑–≤–æ–Ω–∏—Ç–∏ 
    –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º:777777777777''')
        elif txt == r8:
            bot.send_message(message.chat.id, '''–í–∏ –º–æ–∂–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —Ç–æ-—Ç–æ —ñ —Ç–æ-—Ç–æ''', reply_markup=inline_yes_no())

            @bot.callback_query_handler(
                lambda query: query.data == "Yes")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id, '''–ú–∏ —Ä–∞–¥—ñ, —â–æ –≤–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Ä—ñ—à–µ–Ω–∞ ü•∞''')

            @bot.callback_query_handler(lambda query: query.data == "No")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id,
                                 '''–í–∏ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –Ω–∞–π–Ω–∏–∂–Ω—å–æ—é –∫–Ω–æ–ø–∫–æ—é, —â–æ–± –æ–ø–∏—Å–∞—Ç–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –∞–±–æ –∂ –ø–æ–∑–≤–æ–Ω–∏—Ç–∏ 
    –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º:88888888888888''')
        elif txt == "9":
            bot.send_message(message.chat.id, '''–í–∏ –º–æ–∂–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —Ç–æ-—Ç–æ —ñ —Ç–æ-—Ç–æ''', reply_markup=inline_yes_no())

            @bot.callback_query_handler(
                lambda query: query.data == "Yes")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id, '''–ú–∏ —Ä–∞–¥—ñ, —â–æ –≤–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Ä—ñ—à–µ–Ω–∞ ü•∞''')

            @bot.callback_query_handler(lambda query: query.data == "No")  # –ø—Ä–∏–π–æ–º –∫–æ–ª–±–µ–∫—É –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
            def process_callback(query):
                bot.send_message(query.message.chat.id,
                                 '''–í–∏ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –Ω–∞–π–Ω–∏–∂–Ω—å–æ—é –∫–Ω–æ–ø–∫–æ—é, —â–æ–± –æ–ø–∏—Å–∞—Ç–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –∞–±–æ –∂ –ø–æ–∑–≤–æ–Ω–∏—Ç–∏ 
    –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º:99999999999''')
        elif txt == "–ù–µ–º–∞—î –º–æ—î—ó –ø—Ä–æ–±–ª–µ–º–∏":
            sent = bot.send_message(message.chat.id, "–û–ø–∏—à—ñ—Ç—å –í–∞—à—É –ø—Ä–æ–±–ª–µ–º—É —ñ –∑ —á–∏–º –í–∏ —Å—Ç–∏–∫–Ω—É–ª–∏—Å—å –æ–¥–Ω–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º")
            bot.register_next_step_handler(sent, problem)


def problem(message):
    prob = message.text
    if (prob != "") & (prob != "–ù–µ–º–∞—î –º–æ—î—ó –ø—Ä–æ–±–ª–µ–º–∏"):
        info.append(prob)
        sent = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∞–±–æ –∂ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ª—é–±—É –≤–∞—à—É —Å—Ç–æ—Ä—ñ–Ω–∫—É, "
                                                 "—â–æ–± –º–∏ –º–æ–≥–ª–∏ –∑ –í–∞–º–∏ –∑–≤'—è–∑–∞—Ç–∏—Å—è")
        bot.register_next_step_handler(sent, teleph)
    else:
        bot.send_message(message.chat.id,
                         "–ù–µ–≤—ñ—Ä–Ω–∏–π –æ–ø–∏—Å –ø—Ä–æ–±–ª–µ–º–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–∂–º—ñ—Ç—å –∫–Ω–æ–ø–∫—É –∑–Ω–æ–≤—É —Ç–∞ –æ–ø–∏—à—ñ—Ç—å –ø—Ä–æ–±–ª–µ–º—É.")


def teleph(message):
    tel = message.text
    if (tel != "") & (tel != "–ù–µ–º–∞—î –º–æ—î—ó –ø—Ä–æ–±–ª–µ–º–∏"):
        info.append(tel)
    else:
       """" bot.send_message(message.chat.id,
                       "–ù–µ–≤—ñ—Ä–Ω–∏–π –æ–ø–∏—Å –ø—Ä–æ–±–ª–µ–º–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–∂–º—ñ—Ç—å –∫–Ω–æ–ø–∫—É –∑–Ω–æ–≤—É —Ç–∞ –æ–ø–∏—à—ñ—Ç—å –ø—Ä–æ–±–ª–µ–º—É.")"""
    info.append(tel)
    if (info[0] != "") & (info[1] != ""):
        bot.send_message(-359445003, '''–ü—Ä–æ–±–ª–µ–º–∞:{}
–¢–µ–ª–µ—Ñ–æ–Ω:{}'''.format(info[0], info[1]))
        info.clear()
        send = bot.send_message(message.chat.id,
                         "–í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ. –û—á—ñ–∫—É–π—Ç–µ –ø–æ–∫–∏ –∑ –≤–∞–º–∏ –∑–≤'—è–∂—É—Ç—å—Å—è —Ç–∞ –Ω–∞–¥–∞–¥—É—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç–∏ "
                         "–≤–∏—Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º–∏")
        list_ids = list()
        with open("problems.txt") as f:
            text = f.read()
            b = json.loads(text)
            for l in b:
                list_ids.append(l)

        with open("problems.txt", "w") as f:
            list_ids.append(send.message_id - 1)
            print(json.dumps(list_ids), file=f)



bot.polling(none_stop=True)
